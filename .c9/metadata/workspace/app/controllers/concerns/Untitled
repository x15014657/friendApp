{"filter":false,"title":"Untitled","tooltip":"/app/controllers/concerns/Untitled","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":89,"column":0},"action":"insert","lines":["class ProfilesController < ApplicationController","  before_action :authenticate_user!","  before_action :set_profile, only: [:show, :edit, :update, :destroy]","  ","  def noprofile profile = Profile.find_by_user_id(current_user.id) ","    if profile.nil? ","      redirect_to \"/profiles/new\" ","      else","        @profile = Profile.find_by_user_id(current_user.id) ","        redirect_to \"/profiles/#{@profile.id}\" ","    end","  end","  ","  # GET /profiles","  # GET /profiles.json"," def index","    @profiles = User.where('id != ?', current_user.id)"," end","","  # GET /profiles/1","  # GET /profiles/1.json","  def show","  end","","  # GET /profiles/new"," def new ","   @profile = Profile.new(profile_params)","   @profile = current_user.id","   respond_to do |format| format.html # new.html.erb ","   format.json { render json: @profile } end "," end","","  # GET /profiles/1/edit","  def edit","    @profile.user = current_user","  end","","  # POST /profiles","  # POST /profiles.json","  def create","    @profile = Profile.new(profile_params)","       @profile.user.id = current_user.id","    ","    respond_to do |format|","      if @profile.save","        format.html { redirect_to @profile, notice: 'Profile was successfully created.' }","        format.json { render :show, status: :created, location: @profile }","      else","        format.html { render :new }","        format.json { render json: @profile.errors, status: :unprocessable_entity }","      end","    end","  end","","  # PATCH/PUT /profiles/1","  # PATCH/PUT /profiles/1.json","  def update","    respond_to do |format|","      if @profile.update(profile_params)","        format.html { redirect_to @profile, notice: 'Profile was successfully updated.' }","        format.json { render :show, status: :ok, location: @profile }","      else","        format.html { render :edit }","        format.json { render json: @profile.errors, status: :unprocessable_entity }","      end","    end","  end","","  # DELETE /profiles/1","  # DELETE /profiles/1.json","  def destroy","    @profile.destroy","    respond_to do |format|","      format.html { redirect_to profiles_url, notice: 'Profile was successfully destroyed.' }","      format.json { head :no_content }","    end","  end","","  private","    # Use callbacks to share common setup or constraints between actions.","    def set_profile","      @profile = Profile.find_by_user_id(params[:id])","    end","","    # Never trust parameters from the scary internet, only allow the white list through.","    def profile_params","      params.require(:profile).permit(:fullname, :age, :education, :career, :user)","    end","end",""],"id":2}]]},"ace":{"folds":[],"scrolltop":752,"scrollleft":0,"selection":{"start":{"row":89,"column":0},"end":{"row":89,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"hash":"5c5c29e380f03ff515cebaf442fdf477abe602cc","timestamp":1553924877099}